@model IEnumerable<WebCinema.Models.User>
@{
    ViewBag.Title = "Quản lý tài khoản";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

<style>
    .switch {
        position: relative;
        display: inline-block;
        width: 46px;
        height: 24px;
    }

        .switch input {
            display: none;
        }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        transition: .4s;
        border-radius: 34px;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 18px;
            width: 18px;
            left: 3px;
            bottom: 3px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }

    input:checked + .slider {
        background-color: #2bd47d;
    }

        input:checked + .slider:before {
            transform: translateX(22px);
        }

    .table-responsive {
        overflow-x: auto;
    }

    .role-badge {
        padding: 4px 8px;
        border-radius: 12px;
        font-size: 12px;
        font-weight: 500;
    }

    .role-customer {
        background-color: #e3f2fd;
        color: #1976d2;
    }

    .role-staff {
        background-color: #e8f5e9;
        color: #388e3c;
    }

    .role-manager {
        background-color: #fff3e0;
        color: #f57c00;
    }

    .role-admin {
        background-color: #fce4ec;
        color: #c2185b;
    }

    .action-buttons {
        white-space: nowrap;
    }

        .action-buttons .btn {
            margin: 2px;
        }
</style>

<div class="container-fluid py-3">
    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <div class="d-flex justify-content-between align-items-center">
                <h4 class="mb-0">Danh Sách Tài Khoản</h4>
                @Html.ActionLink("Thêm mới", "Create", null, new { @class = "btn btn-light" })
            </div>
        </div>

        <div class="card-body">
            @using (Html.BeginForm("Index", "Users", FormMethod.Get, new { @class = "mb-4" }))
            {
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-md-6">
                        <div class="input-group">
                            @Html.TextBox("search", ViewBag.CurrentFilter as string, new
                            {
                                @class = "form-control",
                                placeholder = "Tìm kiếm theo tên đăng nhập hoặc tên khách hàng"
                            })
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-search"></i> Tìm kiếm
                            </button>
                        </div>
                    </div>
                </div>
            }

            <div class="table-responsive">
                <table class="table table-hover table-bordered">
                    <thead class="table-dark">
                        <tr>
                            <th width="50">#</th>
                            <th>Tên đăng nhập</th>
                            <th>Vai trò</th>
                            <th>Khách hàng</th>
                            <th width="200">Chức năng</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (!Model.Any())
                        {
                            <tr>
                                <td colspan="5" class="text-center py-4">Không có tài khoản nào được tìm thấy</td>
                            </tr>
                        }
                        else
                        {
                            int stt = 1;
                            foreach (var item in Model)
                            {
                                <tr id="row-@item.UserID">
                                    <td>@stt</td>
                                    <td>@item.Username</td>
                                    <td>
                                        @{
                                            var roleClass = "";
                                            var roleName = "";
                                            switch (item.Role)
                                            {
                                                case WebCinema.Helper.UserRoles.Customer:
                                                    roleClass = "role-customer";
                                                    roleName = "Khách hàng";
                                                    break;
                                                case WebCinema.Helper.UserRoles.Staff:
                                                    roleClass = "role-staff";
                                                    roleName = "Nhân viên";
                                                    break;
                                                case WebCinema.Helper.UserRoles.CinemaManager:
                                                    roleClass = "role-manager";
                                                    roleName = "Quản lý rạp";
                                                    break;
                                                case WebCinema.Helper.UserRoles.SuperAdmin:
                                                    roleClass = "role-admin";
                                                    roleName = "CEO";
                                                    break;
                                                default:
                                                    roleClass = "role-customer";
                                                    roleName = "Khách hàng";
                                                    break;
                                            }
                                            <span class="role-badge @roleClass">@roleName</span>
                                        }
                                    </td>
                                    <td>
                                        @if (item.Customer != null)
                                        {
                                            @item.Customer.FullName
                                        }
                                        else
                                        {
                                            <span class="text-muted">Không liên kết</span>
                                        }
                                    </td>
                                    <td class="action-buttons">
                                        @Html.ActionLink("Sửa", "Edit", new { id = item.UserID }, new { @class = "btn btn-sm btn-warning" })
                                      
                                        <button class="btn btn-sm btn-danger delete-btn"
                                                data-id="@item.UserID"
                                                data-username="@item.Username">
                                            <i class="bi bi-trash"></i> Xóa
                                        </button>
                                    </td>
                                </tr>
                                stt++;
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(document).ready(function () {
            var token = $('input[name="__RequestVerificationToken"]').val();

            $('.delete-btn').click(function () {
                var userId = $(this).data('id');
                var username = $(this).data('username');

                Swal.fire({
                    title: 'Xác nhận xóa tài khoản',
                    html: `Bạn có chắc chắn muốn xóa tài khoản <b>${username}</b>?<br>`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: '<i></i> Xóa',
                    cancelButtonText: '<i class="bi bi-x-circle"></i> Hủy'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("DeleteAjax", "Users")',
                            type: 'POST',
                            data: {
                                id: userId,
                                __RequestVerificationToken: token
                            },
                            beforeSend: function() {
                                $('.delete-btn').prop('disabled', true);
                            },
                            success: function (response) {
                                if (response.success) {
                                    Swal.fire({
                                        title: 'Thành công!',
                                        text: response.message,
                                        icon: 'success',
                                        timer: 1500,
                                        showConfirmButton: false
                                    }).then(() => {
                                        $('#row-' + userId).fadeOut(300, function() {
                                            $(this).remove();
                                            // Nếu không còn hàng nào thì hiển thị thông báo
                                            if ($('tbody tr').length === 0) {
                                                $('tbody').html('<tr><td colspan="5" class="text-center py-4">Không có tài khoản nào</td></tr>');
                                            } else {
                                                // Cập nhật lại số thứ tự
                                                $('tbody tr').each(function(index) {
                                                    $(this).find('td:first').text(index + 1);
                                                });
                                            }
                                        });
                                    });
                                } else {
                                    Swal.fire({
                                        title: 'Lỗi!',
                                        text: response.message,
                                        icon: 'error'
                                    });
                                }
                            },
                            error: function (xhr) {
                                Swal.fire({
                                    title: 'Lỗi hệ thống!',
                                    text: xhr.responseJSON?.message || 'Đã xảy ra lỗi khi xử lý yêu cầu',
                                    icon: 'error'
                                });
                            },
                            complete: function() {
                                $('.delete-btn').prop('disabled', false);
                            }
                        });
                    }
                });
            });
        });
    </script>
}